#include <stdio.h>
#include <windows.h>
#include <conio.h>

		
typedef struct {int x;	int y;} point;


point w1[28] = {{4,2}, {5,2}, {6,2}, {4,3}, {6,3}, {4,4}, {6,4}, 
				{7,4}, {8,4}, {9,4}, {2,5}, {3,5}, {4,5}, {9,5},
				{2,6}, {7,6}, {8,6}, {9,6}, {2,7}, {3,7}, {4,7},
				{5,7}, {7,7}, {5,8}, {7,8}, {5,9}, {6,9}, {7,9}};
point b1[4] = {{5,5}, {7,5}, {5,6}, {6,7}};
int bn = 0;
void cxy(int x, int y) {
	COORD Pos = {x, y};
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Pos);
}


int isEmpty(int x, int y) {
	for(int i = 0; i < 28; i++) {
		if(w1[i].x == x && w1[i].y == y) {
			return 0;
		}
	}
	for(int j = 0; j < 4; j++) {
		if(b1[j].x == x && b1[j].y == y) {
			bn = j;
			return 2;
		}
	}
	return 1;
}

//int isBall(int x, int y) {
//	for(int i = 0; i < 4; i++) {
//		if(b1[i].x == x && b1[i].y == y) {
//			bn = i;
//			return 1;
//		}
//	}
//	return 0;
//}







void ce(int x, int y) { 
	cxy(x * 2, y); 
	printf("  ");  
}

void draw(int x, int y, int c) {
	cxy(x * 2, y);
	
	if(c == 0) {
		printf("★");
	}
	else if(c == 1) {
		for(int i = 0; i < 28; i++) {
			cxy(w1[i].x * 2, w1[i].y);
			printf("■");
		}
	}
	else if(c == 2) {
		printf("●");
		cxy(40, 15);
		printf("%d %d", x, y);
	}
	else if(c == 3) {
		printf("◇");
	}
}


int main()
{
	point p = {6,6};
	int pc[2];
	int bc[2];
	int a;
	int pe = 0;	
	int pb = 0;
	int add[4][2] = {{-1,0},{1,0},{0,-1},{0,1}};
	int i = 0;
	
	draw(p.x, p.y, 0);
	draw(w1[i].x, w1[i].y, 1);
	for(int b = 0; b < 4; b++) {
		draw(b1[b].x, b1[b].y, 2);
	}
	printf("\n\n"); 
	
	while(1) {
		a = getch();
		
		if (a == 224) {
			a = getch();
				
			switch(a){
				case 75: i = 0; break; // 0 is LEFT 
				case 77: i = 1; break;
				case 72: i = 2; break;
				case 80: i = 3; break;
			}
		}
			pe = isEmpty(p.x + add[i][0], p.y + add[i][1]);
			
		if (pe == 1) {
			pc[0] = p.x;
			pc[1] = p.y;
			p.x += add[i][0];
			p.y += add[i][1];
			ce(pc[0], pc[1]);
			draw(p.x, p.y, 0); 
		}
		else if(pe == 2) {
			pe = isEmpty(b1[bn].x + add[i][0], b1[bn].y + add[i][1]);
			if(pe == 1) {
				ce(b1[bn].x, b1[bn].y);
				b1[bn].x += add[i][0];
				b1[bn].y += add[i][1];
				draw(b1[bn].x, b1[bn].y, 2);
				
				ce(p.x, p.y); // 이전 플레이어 지우기  
				p.x += add[i][0];
				p.y += add[i][1];
				draw(p.x, p.y, 0); // 새로 플레이어의위치 그리기 
			}
		}
	}
	
	
	
	return 0;
	
}
