#include <stdio.h>
#include <windows.h>
#include <conio.h>
#include <time.h>

//틀린 알파벳 통계 저장  
int num[26]; 

//틀린 알파벳 통계를 내기 위한 배열  
char ap[54] = {  'a','b','c','d','e','f','g','h',
				'i','j','k','l','m','n','o','p','q',
				'r','s','t','u','v','w','x','y','z',
				'A','B','C','D','E','F','G','H',
				'I','J','K','L','M','N','O','P','Q',
				'R','S','T','U','V','W','X','Y','Z'  };	
								
// 글자의 색깔을 바꿔준다. 
void cc(int colorNum) {
	SetConsoleTextAttribute( GetStdHandle( STD_OUTPUT_HANDLE), colorNum);
}

//글자를 쓰는 곳을 바꿔준다. 
void gotoxy(int x, int y) {
	COORD Pos = {x, y};
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Pos);
}
			
//틀린 알파벳 통계  
void wc(char word) {
	for(int i = 0; i < 26; i++) {
		if(word == ap[i] || word == ap[i+26]) {
			num[i] += 1;
		}
	}
}

int main() {
	FILE * fp;
	FILE * lankw;
	FILE * lankr;
	
	fp = fopen("typing.txt", "r");
	//lankw = fopen("lank.txt", "w");
	lankr = fopen("lank.txt", "r");
	
	char t;
	char quiz[500];
	char a;
	int b = 0;
	int x = 0;
	int y = 0;
	int qn = 0;
	int e = 0;
	int w = 0; 
	int wn = 0;
	int n = 0;
	int tp = 0;
	int clock = 0;
	int after = 0;
	int end = 10;
	int door = 0;
	
	char * lankn[3];
	int lankm[3];
	int lanks[3];
	char name[100];
	char player[100];
	
	for(int nn = 0; nn < 3; nn++) {
		for(int nntwo = 0; nntwo < 3; nntwo++) {
			if(nntwo == 0) { 
				for(int ln = 0; ; ln++) {
					fseek(lankr,0,SEEK_CUR);
					t = fgetc(lankr);
					name[ln] = t;
					if(t == '.') {
						name[ln] = '\0';
						break;
					}
				}
				lankn[nn] = name;
				//printf("%s ", lankn[nn]);
			}
			
			if(nntwo == 1) {
				for(int lntwo = 0; ; lntwo++) {
					fseek(lankr,0,SEEK_CUR);
					t = fgetc(lankr);
					name[lntwo] = t;
					if(t == '.') {
						name[lntwo] = '\0';
						break;
					}
				}
				lanks[nn] = name;
				//printf("%s ", lankn[nn]);
			}
			
			if(nntwo == 2) {
				for(int lnthree = 0; ; lnthree++) {
					fseek(lankr,0,SEEK_CUR);
					t = fgetc(lankr);
					name[lnthree] = t;
					if(t == '.') {
						name[lnthree] = '\0';
						break;
					}
				}
				lankm[nn] = name;
				//printf("%s ", lankn[nn]);
			}
		}
	}
	
	time_t cT;
	struct tm * lT;
	cT = time(NULL);
	lT = localtime(&cT);
	
	int nt = lT -> tm_sec;
	int before = lT -> tm_sec;
	
	//창의 사이즈와 창의 이름을 정한다. 
	//system("mode con: cols=100 lines=70");
	system("title=typing Game");	
	
	cc(10);
	printf("\n[타이핑 게임 시작!] (총 10문제)\n\n");
	y += 3;
	 
	while(1) {
		//문제를 낸다. 
		cc(14);
		printf("%d\n", end);
		y += 1;
		
		cc(15);	
		for(int j = 0; ; j++) {
			fseek(fp,0,SEEK_CUR);
			t = fgetc(fp);
			putchar(t);
			quiz[j] = t;
			
			//문장의 끝  			
			if(t == '.' || t == '?' || t == '!') {
				fseek(fp,0,SEEK_CUR);
				t = fgetc(fp);
				printf("\n");
				qn = j;
				y += 1;
				cc(7);
				break;
			}
		}
		
		//문제에 따라서 답을 쓴다. 
		for(int k = 0; ; k++) {
			a = getch();
			x += 1;
			b = a;
			cT = time(NULL);
			lT = localtime(&cT);
			after = lT -> tm_sec;
			
			//타이머 역할  
			if(before > after) {
				clock += 59 - before + after + 1;
				before = lT -> tm_sec;
			}
			else if(before < after) {
				clock += after - before;
				before = lT -> tm_sec;
			}
			
			//분당 타수  
			if(nt == lT -> tm_sec) {
				if (tp < wn){
					tp = wn;
					wn = 0;
				}
			}
			
			//엔터키를 눌렀을때 다음 문제로 넘어간다. 
			if(b == 13) {
				printf("\n\n");
				y += 2;
				break;
			}
			
			//글씨를 지우고 다시쓴다. 
			else if(b == 8 && k != 0) {
				k = k - 2;
				x = x - 2;
				gotoxy(x, y);
				printf(" ");
				e += 1;
				w -= 1;
				wn -= 2;
			}
			
			//문제보다 글을 더 많이 썼을 때 다음 문제로 넘어간다. 
			else if(qn < k) {
				x -= 1;
				printf("\n\n");
				y += 2;
				break;
			}
			
			//글을 쓴것과 문제가 다를시 내가 쓴글이 빨간색으로 바뀐다. 
			if(quiz[k] != a) {
				cc(12);
				printf("%c\a", a);
				cc(7);
				wc(a);
				w += 1;
				wn += 1;
			}
			
			//내가 입력한 글씨가 써진다. 
			else {
				printf("%c", a);
				wn += 1;
			}
		}
		x = 0;
		//파일의 더이상 문장이 없을시 무한 반복을 나간다.
		if(t == EOF) break;
		end -= 1;
	}
	
	//틀린 횟수와 지운 횟수를 알려준다. 
	printf("\n틀린 횟수 : %d, 지운 횟수 : %d\n", w, e);
  
  	//어떤 단어가 제일 많이 틀렸는지 알 수 있다. 
	printf("\n[종류]\t[횟수]\t[종류]\t[횟수]\n"); 
	for(int i = 0; i < 26; i++) {
		if(n == 2) {
			printf("\n");
			n = 0;
		}
		printf(" %c\t %d\t", ap[i], num[i]);
		n += 1;
	}
	
	//1분 이내에 타수를 알려준다. 
	if(clock < 60) {
		printf("\n\n타자 : %d", wn);
	}
	//분당 타수를 알려준다. 
	else {
		printf("\n\n타자 : %d/분", tp);
	}
	
	//치는데 걸린 시간을 알려준다. 
	printf("\t시간 : %d초", clock);
	
	if(door == 411) {
		if(lanks[0] < clock && lankm[0] > w) {
			lankn[2] = lankn[1];
			lanks[2] = lanks[1];
			lankm[2] = lankm[1];
			
			lankn[1] = lankn[0];
			lanks[1] = lanks[0];
			lankm[1] = lankm[0];
			
			lankn[0] = player;
			lanks[0] = clock;
			lankm[0] = w;
		}
		
		else if(lanks[1] < clock && lankm[1] > w) {
			lankn[2] = lankn[1];
			lanks[2] = lanks[1];
			lankm[2] = lankm[1];
			
			lankn[1] = player;
			lanks[1] = clock;
			lankm[1] = w;
		}
		
		else if(lanks[2] < clock && lankm[2] > w) {
			lankn[2] = player;
			lanks[2] = clock;
			lankm[2] = w;
		}
		
		else {
			
		
	fclose(fp);
	fclose(lankw);
	fclose(lankr);
	
	return 0;
}
