#include <stdio.h>
#include <windows.h>
#include <conio.h>

int xn = 6;
int yn = 6;
int bw[4];

void cxy(int x, int y) {
	COORD Pos = {x, y};
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Pos);
}

void cnxy(int px, int py) {
	xn = px;
	yn = py;
}

int pMove(int px, int py) {
	char a;
	a = getch();
	
	switch(a) {
		case 75: 
		if(bw[0] == 0) {
			cxy(px * 2, py); printf("  "); cxy((px * 2) - 2, py); printf("★"); px = px - 1; cnxy(px, py); break;
		}
		case 77:
		if(bw[1] == 0) {
			cxy(px * 2, py); printf("  "); cxy((px * 2) + 2, py); printf("★"); px += 1; cnxy(px, py); break;
		}
		case 72: 
		if(bw[2] == 0) {
			cxy(px * 2, py); printf("  "); cxy(px * 2, py - 1); printf("★"); py -= 1; cnxy(px, py); break;
		}
		case 80: 
		if(bw[3] == 0) {
			cxy(px * 2, py); printf("  "); cxy(px * 2, py + 1); printf("★"); py += 1; cnxy(px, py); break;
		}
	}
}
		
typedef struct {
	int x;
	int y;
}point;

typedef struct {
	point bP;
}ball;

typedef struct {
	point pP;
}player;

typedef struct {
	point wP;
}wall;

typedef struct { 
	point hP;
}home;

int main() {
	wall w1[28] = {{4,2}, {5,2}, {6,2}, {4,3}, {6,3}, {4,4}, {6,4}, 
				  {7,4}, {8,4}, {9,4}, {2,5}, {3,5}, {4,5}, {9,5},
				  {2,6}, {7,6}, {8,6}, {9,6}, {2,7}, {3,7}, {4,7},
				  {5,7}, {7,7}, {5,8}, {7,8}, {5,9}, {6,9}, {7,9}};
	ball b1[4] = {{5,5}, {7,5}, {5,6}, {6,7}};
	home h1[4] = {{5,3}, {8,5}, {3,6}, {6,8}};
	player p1 = {6,6};
	
	for(int j = 0; j < 4; j++) {
		cxy(b1[j].bP.x * 2, b1[j].bP.y);
		printf("●");
		cxy(h1[j].hP.x * 2, h1[j].hP.y);
		printf("◇");
	}
	
	cxy(p1.pP.x * 2, p1.pP.y);
	printf("★");
	
	for(int i = 0; i < 28; i++) {
		cxy(w1[i].wP.x * 2, w1[i].wP.y);
		printf("■");
	}
	printf("\n\n"); 

	char a;
	int b;
	int px = p1.pP.x;
	int py = p1.pP.y;
	printf("%d %d", px, py);
	while(1) {
		a = getch();
		b = a;
		
		for(int bwz = 0; bwz < 4; bwz++) {
			bw[bwz] = 0;
		}
		for(int k = 0; k < 28; k++) {
			if(w1[k].wP.x == px - 1 && w1[k].wP.y == py) bw[0] == 1;
			else if(w1[k].wP.x == px + 1 && w1[k].wP.y == py) bw[1] == 1;
			else if(w1[k].wP.x == px && w1[k].wP.y == py - 1) bw[2] == 1;
			else if(w1[k].wP.x == px && w1[k].wP.y == py + 1) bw[3] == 1;
		}
		
		
		
		if(b == -32) {
			px = xn;
			py = yn;
			cxy(15*2, 15);
			printf("%d %d", px, py);
			pMove(px, py);
		}
	}
	
	return 0;
}
